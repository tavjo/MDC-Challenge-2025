###############################################################################
#
#  Welcome to Baml! To use this generated code, please run the following:
#
#  $ pip install baml-py
#
###############################################################################

# This file was generated by BAML: please do not edit it. Instead, edit the
# BAML files and re-generate this code.
#
# ruff: noqa: E501,F401
# flake8: noqa: E501,F401
# pylint: disable=unused-import,line-too-long
# fmt: off

file_map = {
    
    "citation_extractor.baml": "\nclass CitationEntity {\n    evidence string[] @description(\"List of evidence from the text for the data citation\")\n    data_citation string @description(\"Data citation from text\")\n    // doc_id string? @description(\"DOI of the document where the data citation is found\")\n    // pages int[]? @description(\"List of page numbers where the data citation is mentioned.\")\n}\n\n// Create a function to extract the data citations from a list of strings.\nfunction ExtractCitation(document: string[]) -> CitationEntity[] {\n  client QwenLocal\n  prompt #\"\n    You are a research assistant tasked with extracting dataset citations from a text. Extract ALL unique dataset citations from the text.\n    The evidence should be the snippet of text that contains the dataset citation.\n\n    Dataset citations usually appear as:\n      1. Accession numbers in formats like:\n        - E-GEOD-48278\n        - JX312727\n        - PRJNA384940\n      2. Data repository DOIs in formats like:\n        - https://doi.org/10.5061/dryad.4dj6042\n        - 10.5061/dryad.4dj6042\n        - doi:10.5061/dryad.4dj6042\n        - https://doi.org/10.6084/m9.figshare.29901470.v1\n    \n    Report dataset citations EXACTLY as they appear in the text but do not include the surrounding text itself. Don't add the reporsitory name unless it already a part of the data citation. \n    \n    Do not return article/preprint/journal DOIs (e.g., bioRxiv/medRxiv, publisher DOIs). Return only dataset repository DOIs (Dryad, Zenodo, Figshare, PANGAEA, etc.) and accession IDs (GEO/SRA/ENA/GenBank/PRJNA/PRJEB/PXD/E-*). If uncertain, omit.\n\n    Never make up a data citation. If you cannot find a data citation, return an empty list.\n\n    IMPORTANT: Return each accession number or DOI separately.\n\n    {{ ctx.output_format }}\n\n    {{ _.role(\"user\") }}\n\n    {% for text in document %}\n    --- {{ text }}\n    {% endfor %}\n  \"#\n}\n\n\n\n// Test the function with a sample resume. Open the VSCode playground to run this.\ntest get_citation_entities {\n  functions [ExtractCitation]\n  args {\n      document [\n                    #\"bioRxiv preprint\\n\\ndoi:\\n\\nhttps://doi.org/10.1101/2022.07.21.501061\\n\\n;\\n\\nthis version posted July 22, 2022.\\n\\nThe copyright holder for this preprint (which\\n\\nwas not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made\\n\\navailable under a\\n\\nCC-BY-NC 4.0 International license .\\n\\n1\\n\\nClimate Ecology as a Driver of Global Breeding Periods in Anurans\\n\\n2\\n\\n3\\n\\nBryan H. Juarez and Lauren A.\"#,\n                    #\".\\n\\nData availability Repository details and associated metadata for curated samples can be found in Supplementary file 1. MTIII and other element measurement data are in Figure 2\\u2014source data 1, and the Rscript used for morphometric analysis is in the DRYAD database (Heintzman et al., 2017). MtDNA genome sequences have been deposited in Genbank under accessions KT168317-KT168336, MF134655- MF134663, and an updated version of JX312727. All mtDNA genome alignments (in NEXUS format) and associated XML and TREE files are in the DRYAD database (Heintzman et al., 2017).\n                    \"#,\n                    #\"Raw shot- gun sequence data used for the nuclear genomic analyses and raw shotgun and target enrichment  sequencedata for TMM 34\\u20132518 (francisci holotype) have been deposited in the Short Read Archive (BioProject: PRJNA384940).\\n\\nNomenclatural act The electronic edition of this article conforms to the requirements of the amended International Code of Zoological Nomenclature, and hence the new name contained herein is available under that Code from the electronic edition of this article. This published work and the nomenclatural act it contains have been registered in ZooBank, the online registration system for the ICZN. The ZooBank LSIDs (Life Science Identifiers) can be resolved and the associated information viewed through any standard web browser by appending the LSID to the prefix \\u2018http://zoobank.org/\\u2019. The LSID for this publication is: urn:lsid:zoobank.org:pub:8D270E0A-9148-4089-920C-724F07D8DC0B. The electronic edition of this work was published in a journal with an ISSN, and has been archived and is available from the following digital repositories: PubMed Central and LOCKSS.\\n\\nAcknowledgements We thank the Klondike placer gold mining community of Yukon for their support and providing access to their mines from which many of our Haringtonhippus fossils were recovered.\"#,\n                    #\"The lineage-specific\\n\\n534\\n\\nevolution of aquaporin gene clusters facilitated tetrapod terrestrial adaptation. PLoS One,\\n\\n535\\n\\n9, e113686.\\n\\n536\\n\\nFisher, M.C. & Garner, T.W.J. (2020). Chytrid fungi and global amphibian declines. Nat. Rev.\\n\\n537\\n\\nMicrobiol., 18, 332\\u2013343.\\n\\n538\\n\\nFreidenburg, L.K. & Skelly, D.K. (2004). Microgeographical variation in thermal preference by an\\n\\n539\\n\\namphibian. Ecol. Lett., 7, 369\\u2013373.\\n\\n540\\n\\nGBIF.org. (2021a). Data from: GBIF Occurrence Download. Available at:\\n\\n541\\n\\nhttps://doi.org/10.15468/dl.354f8k. Accessed: 03 October 2021.\\n\\n542\\n\\nGBIF.org. (2021b). Data from: GBIF Occurrence Download. Available at:\\n\\n543\\n\\nhttps://doi.org/10.15468/dl.pdjqte. Accessed: 03 October 2021.\\n\\n544\\n\\nGBIF.org. (2021c). Data from: GBIF Occurrence Download. Available at:\\n\\n545\\n\\nhttps://doi.org/10.15468/dl.nbku3v. Accessed: 03 October 2021.\\n\\n546\\n\\nGBIF.org. (2021d). Data from: GBIF Occurrence Download. Available at:\\n\\n547\\n\\nhttps://doi.org/10.15468/dl.uejpg6. Accessed: 03 October 2021.\\n\\n548\\n\\nGiaretta, A.A., Facure, K.G., Sawaya, R.J., Meyer, J.H.D.M. & Chemin, N. (1999).\"#\n      ]\n  }\n}\n",
    "clients.baml": "// Learn more about clients at https://docs.boundaryml.com/docs/snippets/clients/overview\n\n\nclient<llm> LocalQwen {\n  provider ollama\n  options {\n    // base_url \"http://localhost:11434/v1\"\n    model \"qwen3:latest\"\n    temperature 0.0\n  }\n}\n\nclient<llm> QwenLocal {\n  provider \"openai-generic\"\n  options {\n    base_url \"http://127.0.0.1:8000/v1\"\n    model \"qwen3-8b-awq-local\"\n    default_role \"user\" // vLLM-specific quirk\n    temperature 0.0\n  }\n}\n\nclient<llm> MyClient {\n  provider \"openai\"\n  retry_policy Constant\n  options {\n    api_key env.OPENAI_API_KEY\n    model \"gpt-4.1-nano-2025-04-14\"\n    temperature 0.0\n  }\n}\n\n\n// https://docs.boundaryml.com/docs/snippets/clients/fallback\nclient<llm> OpenaiFallback {\n  provider fallback\n  options {\n    // This will try the clients in order until one succeeds\n    strategy [QwenLocal, MyClient]\n  }\n}\n\n// https://docs.boundaryml.com/docs/snippets/clients/retry\nretry_policy Constant {\n  max_retries 3\n  // Strategy is optional\n  strategy {\n    type constant_delay\n    delay_ms 200\n  }\n}\n\nretry_policy Exponential {\n  max_retries 2\n  // Strategy is optional\n  strategy {\n    type exponential_backoff\n    delay_ms 300\n    multiplier 1.5\n    max_delay_ms 10000\n  }\n}",
    "generators.baml": "// This helps use auto generate libraries you can use in the language of\n// your choice. You can have multiple generators if you use multiple languages.\n// Just ensure that the output_dir is different for each generator.\ngenerator target {\n    // Valid values: \"python/pydantic\", \"typescript\", \"ruby/sorbet\", \"rest/openapi\"\n    output_type \"python/pydantic\"\n\n    // Where the generated code will be saved (relative to baml_src/)\n    output_dir \"../\"\n\n    // The version of the BAML package you have installed (e.g. same version as your baml-py or @boundaryml/baml).\n    // The BAML VSCode extension version should also match this version.\n    version \"0.88.0\"\n\n    // Valid values: \"sync\", \"async\"\n    // This controls what `b.FunctionName()` will be (sync or async).\n    default_client_mode sync\n}\n",
}

def get_baml_files():
    return file_map
# ----------------------------------------------------------------------------
#
#  Welcome to Baml! To use this generated code, please run the following:
#
#  $ pip install baml
#
# ----------------------------------------------------------------------------

# This file was generated by BAML: please do not edit it. Instead, edit the
# BAML files and re-generate this code using: baml-cli generate
# baml-cli is available with the baml package.

_file_map = {

    "citation_extractor.baml": "\nenum DatasetType {\n  PRIMARY @description(\"Raw or processed data generated as part of the paper, specifically for the study\")\n  SECONDARY @description(\"Raw or processed data derived or reused from existing records or published data\")\n}\nclass CitationEntity {\n    evidence string[] @description(\"List of evidence from document for the data citation\")\n    data_citation string @description(\"Data citation from text (Data repository DOI or accession number. Examples data DOI: https://doi.org/10.5061/dryad.4dj6042. Example accession number: JX312727)\")\n    dataset_type DatasetType @description(\"Type of dataset citation\")\n}\n\n// Create a function to extract the data citations from a list of strings.\nfunction ExtractCitation(document: string[]) -> CitationEntity[] {\n  client QwenLocalRR\n  prompt #\"\n    /no_think\n\n    You are a research assistant tasked with extracting dataset citations from a text. Extract ALL dataset citations from the document.\n    The evidence should be the snippet of text from the document that contains the dataset citation. DO NOT return article DOIs, empty strings or anything that is not a data citation.\n\n    Use context provided in the document to determine if a citation is a data citation such as \"Dataset deposited in ...\", \"Data retrieved from ...\", \"Data accessed from ...\",\"Data available in ...\" etc.\n    \n    Report dataset citations EXACTLY as they appear in the text but do not include the surrounding text itself. Don't add the reporsitory name unless it already a part of the data citation. \n    \n    Return only dataset repository DOIs (Dryad, Zenodo, Figshare, PANGAEA, etc.) and accession IDs (GEO/SRA/ENA/GenBank/PRJNA/PRJEB/PXD/E-* etc.). Do NOT return article/preprint/journal DOIs (e.g., bioRxiv/medRxiv, publisher DOIs). Examine context surrounding DOIs to judge whether they are data citations or not. Example data citation DOI:  (example data citation DOI).\n\n    Never make up a data citation. If you cannot find a data citation, return an empty list.\n\n    When accession numbers are grouped together to form a range such as in this example: JX312727-JX312728 (example accession range), you must report each accession number in the range as a separate data citation.\n    IMPORTANT: Return each accession number or dataset repository DOI as separate data citations.\n\n    DO NOT RETURN ANYTHING THAT IS NOT A DATA CITATION (i.e. accession number or repository DOI). \n\n    NEVER return article/preprint/journal DOIs (e.g., bioRxiv/medRxiv, publisher DOIs). Examine context surrounding DOIs to judge whether they are data citations or not.\n\n    {{ ctx.output_format }}\n\n    {{ _.role(\"user\") }}\n\n    {% for text in document %}\n    --- {{ text }}\n    {% endfor %}\n  \"#\n}\n\n\n\n// Test the function with a sample resume. Open the VSCode playground to run this.\ntest get_citation_entities {\n  functions [ExtractCitation]\n  args {\n      document [\n                    #\"bioRxiv preprint\\n\\ndoi:\\n\\nhttps://doi.org/10.1101/2022.07.21.501061\\n\\n;\\n\\nthis version posted July 22, 2022.\\n\\nThe copyright holder for this preprint (which\\n\\nwas not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made\\n\\navailable under a\\n\\nCC-BY-NC 4.0 International license .\\n\\n1\\n\\nClimate Ecology as a Driver of Global Breeding Periods in Anurans\\n\\n2\\n\\n3\\n\\nBryan H. Juarez and Lauren A.\"#,\n                    #\".\\n\\nData availability Repository details and associated metadata for curated samples can be found in Supplementary file 1. MTIII and other element measurement data are in Figure 2\\u2014source data 1, and the Rscript used for morphometric analysis is in the DRYAD database (Heintzman et al., 2017). MtDNA genome sequences have been deposited in Genbank under accessions KT168317-KT168336, MF134655- MF134663, and an updated version of JX312727. All mtDNA genome alignments (in NEXUS format) and associated XML and TREE files are in the DRYAD database (Heintzman et al., 2017).\n                    \"#,\n                    #\"Raw shot- gun sequence data used for the nuclear genomic analyses and raw shotgun and target enrichment  sequencedata for TMM 34\\u20132518 (francisci holotype) have been deposited in the Short Read Archive (BioProject: PRJNA384940).\\n\\nNomenclatural act The electronic edition of this article conforms to the requirements of the amended International Code of Zoological Nomenclature, and hence the new name contained herein is available under that Code from the electronic edition of this article. This published work and the nomenclatural act it contains have been registered in ZooBank, the online registration system for the ICZN. The ZooBank LSIDs (Life Science Identifiers) can be resolved and the associated information viewed through any standard web browser by appending the LSID to the prefix \\u2018http://zoobank.org/\\u2019. The LSID for this publication is: urn:lsid:zoobank.org:pub:8D270E0A-9148-4089-920C-724F07D8DC0B. The electronic edition of this work was published in a journal with an ISSN, and has been archived and is available from the following digital repositories: PubMed Central and LOCKSS.\\n\\nAcknowledgements We thank the Klondike placer gold mining community of Yukon for their support and providing access to their mines from which many of our Haringtonhippus fossils were recovered.\"#,\n                    #\"The lineage-specific\\n\\n534\\n\\nevolution of aquaporin gene clusters facilitated tetrapod terrestrial adaptation. PLoS One,\\n\\n535\\n\\n9, e113686.\\n\\n536\\n\\nFisher, M.C. & Garner, T.W.J. (2020). Chytrid fungi and global amphibian declines. Nat. Rev.\\n\\n537\\n\\nMicrobiol., 18, 332\\u2013343.\\n\\n538\\n\\nFreidenburg, L.K. & Skelly, D.K. (2004). Microgeographical variation in thermal preference by an\\n\\n539\\n\\namphibian. Ecol. Lett., 7, 369\\u2013373.\\n\\n540\\n\\nGBIF.org. (2021a). Data from: GBIF Occurrence Download. Available at:\\n\\n541\\n\\nhttps://doi.org/10.15468/dl.354f8k. Accessed: 03 October 2021.\\n\\n542\\n\\nGBIF.org. (2021b). Data from: GBIF Occurrence Download. Available at:\\n\\n543\\n\\nhttps://doi.org/10.15468/dl.pdjqte. Accessed: 03 October 2021.\\n\\n544\\n\\nGBIF.org. (2021c). Data from: GBIF Occurrence Download. Available at:\\n\\n545\\n\\nhttps://doi.org/10.15468/dl.nbku3v. Accessed: 03 October 2021.\\n\\n546\\n\\nGBIF.org. (2021d). Data from: GBIF Occurrence Download. Available at:\\n\\n547\\n\\nhttps://doi.org/10.15468/dl.uejpg6. Accessed: 03 October 2021.\\n\\n548\\n\\nGiaretta, A.A., Facure, K.G., Sawaya, R.J., Meyer, J.H.D.M. & Chemin, N. (1999).\"#\n      ]\n  }\n}\n",
    "citation_type.baml": "\n\ntest classify_dataset_type_prjna {\n  functions [ClassifyDatasetType]\n  args {\n    input {\n      citation {\n        evidence [\n          #\"Raw shot- gun sequence data used for the nuclear genomic analyses and raw shotgun and target enrichment  sequencedata for TMM 34\\u20132518 (francisci holotype) have been deposited in the Short Read Archive (BioProject: PRJNA384940).\\n\\nNomenclatural act The electronic edition of this article conforms to the requirements of the amended International Code of Zoological Nomenclature, and hence the new name contained herein is available under that Code from the electronic edition of this article. This published work and the nomenclatural act it contains have been registered in ZooBank, the online registration system for the ICZN. The ZooBank LSIDs (Life Science Identifiers) can be resolved and the associated information viewed through any standard web browser by appending the LSID to the prefix \\u2018http://zoobank.org/\\u2019. The LSID for this publication is: urn:lsid:zoobank.org:pub:8D270E0A-9148-4089-920C-724F07D8DC0B. The electronic edition of this work was published in a journal with an ISSN, and has been archived and is available from the following digital repositories: PubMed Central and LOCKSS.\\n\\nAcknowledgements We thank the Klondike placer gold mining community of Yukon for their support and providing access to their mines from which many of our Haringtonhippus fossils were recovered.\"#\n        ]\n        data_citation \"PRJNA384940\"\n      }\n      text [\n        #\"bioRxiv preprint\\n\\ndoi:\\n\\nhttps://doi.org/10.1101/2022.07.21.501061\\n\\n;\\n\\nthis version posted July 22, 2022.\\n\\nThe copyright holder for this preprint (which\\n\\nwas not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made\\n\\navailable under a\\n\\nCC-BY-NC 4.0 International license .\\n\\n1\\n\\nClimate Ecology as a Driver of Global Breeding Periods in Anurans\\n\\n2\\n\\n3\\n\\nBryan H. Juarez and Lauren A.\"#,\n        #\".\\n\\nData availability Repository details and associated metadata for curated samples can be found in Supplementary file 1. MTIII and other element measurement data are in Figure 2\\u2014source data 1, and the Rscript used for morphometric analysis is in the DRYAD database (Heintzman et al., 2017). MtDNA genome sequences have been deposited in Genbank under accessions KT168317-KT168336, MF134655- MF134663, and an updated version of JX312727. All mtDNA genome alignments (in NEXUS format) and associated XML and TREE files are in the DRYAD database (Heintzman et al., 2017).\n        \"#,\n        #\"Raw shot- gun sequence data used for the nuclear genomic analyses and raw shotgun and target enrichment  sequencedata for TMM 34\\u20132518 (francisci holotype) have been deposited in the Short Read Archive (BioProject: PRJNA384940).\\n\\nNomenclatural act The electronic edition of this article conforms to the requirements of the amended International Code of Zoological Nomenclature, and hence the new name contained herein is available under that Code from the electronic edition of this article. This published work and the nomenclatural act it contains have been registered in ZooBank, the online registration system for the ICZN. The ZooBank LSIDs (Life Science Identifiers) can be resolved and the associated information viewed through any standard web browser by appending the LSID to the prefix \\u2018http://zoobank.org/\\u2019. The LSID for this publication is: urn:lsid:zoobank.org:pub:8D270E0A-9148-4089-920C-724F07D8DC0B. The electronic edition of this work was published in a journal with an ISSN, and has been archived and is available from the following digital repositories: PubMed Central and LOCKSS.\\n\\nAcknowledgements We thank the Klondike placer gold mining community of Yukon for their support and providing access to their mines from which many of our Haringtonhippus fossils were recovered.\"#,\n        #\"The lineage-specific\\n\\n534\\n\\nevolution of aquaporin gene clusters facilitated tetrapod terrestrial adaptation. PLoS One,\\n\\n535\\n\\n9, e113686.\\n\\n536\\n\\nFisher, M.C. & Garner, T.W.J. (2020). Chytrid fungi and global amphibian declines. Nat. Rev.\\n\\n537\\n\\nMicrobiol., 18, 332\\u2013343.\\n\\n538\\n\\nFreidenburg, L.K. & Skelly, D.K. (2004). Microgeographical variation in thermal preference by an\\n\\n539\\n\\namphibian. Ecol. Lett., 7, 369\\u2013373.\\n\\n540\\n\\nGBIF.org. (2021a). Data from: GBIF Occurrence Download. Available at:\\n\\n541\\n\\nhttps://doi.org/10.15468/dl.354f8k. Accessed: 03 October 2021.\\n\\n542\\n\\nGBIF.org. (2021b). Data from: GBIF Occurrence Download. Available at:\\n\\n543\\n\\nhttps://doi.org/10.15468/dl.pdjqte. Accessed: 03 October 2021.\\n\\n544\\n\\nGBIF.org. (2021c). Data from: GBIF Occurrence Download. Available at:\\n\\n545\\n\\nhttps://doi.org/10.15468/dl.nbku3v. Accessed: 03 October 2021.\\n\\n546\\n\\nGBIF.org. (2021d). Data from: GBIF Occurrence Download. Available at:\\n\\n547\\n\\nhttps://doi.org/10.15468/dl.uejpg6. Accessed: 03 October 2021.\\n\\n548\\n\\nGiaretta, A.A., Facure, K.G., Sawaya, R.J., Meyer, J.H.D.M. & Chemin, N. (1999).\"#\n      ]\n    }\n  }\n}\nclass DatasetTypeInput {\n  citation CitationEntity @description(\"The extracted data citation to classify\")\n  text string[] @description(\"Context snippets from the document\")\n}\n\nfunction ClassifyDatasetType(input: DatasetTypeInput) -> DatasetType {\n  client QwenLocalRR\n  prompt #\"\n    Determine whether the provided data citation is PRIMARY, SECONDARY, or NEITHER.\n    Definitions:\n    - PRIMARY: Raw or processed data generated as part of the paper, specifically for the study.\n    - SECONDARY: Raw or processed data derived or reused from existing records or published data.\n    - NEITHER: Not a data citation.\n\n    Use the context in the text to decide. Return only the label per the output schema.\n\n    {{ ctx.output_format }}\n\n    {{ _.role(\"user\") }}\n    Full input:\n    {{ input }}\n    Citation to classify: {{ input.citation.data_citation }}\n    Evidence lines:\n    {% for ev in input.citation.evidence %}\n    - {{ ev }}\n    {% endfor %}\n\n    Context:\n    {% for t in input.text %}\n    --- {{ t }}\n    {% endfor %}\n  \"#\n}\n\n",
    "clients.baml": "// Learn more about clients at https://docs.boundaryml.com/docs/snippets/clients/overview\n\n\nclient<llm> LocalQwen {\n  provider ollama\n  options {\n    // base_url \"http://localhost:11434/v1\"\n    model \"qwen3:latest\"\n    temperature 0.0\n  }\n}\n\nclient<llm> QwenLocal0 {\n  provider \"openai-generic\"\n  retry_policy Exponential\n  options {\n    base_url \"http://127.0.0.1:8000/v1\"\n    model \"qwen3-1.7b-local\"\n    default_role \"user\"  // vLLM quirk\n    temperature 0.0\n    top_p 1.0\n    max_tokens 768\n    // Fail fast if the model gets cut off; prevents silently truncated parses\n    finish_reason_deny_list [\"length\"]\n  }\n}\n\nclient<llm> QwenLocal1 {\n  provider \"openai-generic\"\n  retry_policy Exponential\n  options {\n    base_url \"http://127.0.0.1:8001/v1\"\n    model \"qwen3-1.7b-local\"\n    default_role \"user\"\n    temperature 0.0\n    top_p 1.0\n    max_tokens 768\n    finish_reason_deny_list [\"length\"]\n  }\n}\n\n// Fan out across the two single-GPU servers\nclient<llm> QwenLocalRR {\n  provider round-robin\n  options {\n    strategy [\n      QwenLocal0\n      QwenLocal1\n    ]\n  }\n}\n\nclient<llm> MyClient {\n  provider \"openai\"\n  retry_policy Constant\n  options {\n    api_key env.OPENAI_API_KEY\n    model \"gpt-4.1-nano-2025-04-14\"\n    temperature 0.0\n  }\n}\n\n\n// https://docs.boundaryml.com/docs/snippets/clients/fallback\nclient<llm> OpenaiFallback {\n  provider fallback\n  options {\n    // This will try the clients in order until one succeeds\n    strategy [QwenLocal0, QwenLocal1]\n  }\n}\n\n// https://docs.boundaryml.com/docs/snippets/clients/retry\nretry_policy Constant {\n  max_retries 3\n  // Strategy is optional\n  strategy {\n    type constant_delay\n    delay_ms 200\n  }\n}\n\nretry_policy Exponential {\n  max_retries 3\n  // Strategy is optional\n  strategy {\n    type exponential_backoff\n    delay_ms 300\n    multiplier 1.5\n    max_delay_ms 10000\n  }\n}",
    "generators.baml": "// This helps use auto generate libraries you can use in the language of\n// your choice. You can have multiple generators if you use multiple languages.\n// Just ensure that the output_dir is different for each generator.\ngenerator target {\n    // Valid values: \"python/pydantic\", \"typescript\", \"ruby/sorbet\", \"rest/openapi\"\n    output_type \"python/pydantic\"\n\n    // Where the generated code will be saved (relative to baml_src/)\n    output_dir \"../\"\n\n    // The version of the BAML package you have installed (e.g. same version as your baml-py or @boundaryml/baml).\n    // The BAML VSCode extension version should also match this version.\n    version \"0.206.1\"\n\n    // Valid values: \"sync\", \"async\"\n    // This controls what `b.FunctionName()` will be (sync or async).\n    default_client_mode sync\n}\n",
}

def get_baml_files():
    return _file_map